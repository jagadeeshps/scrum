// CHECKSTYLE:OFF
/**
 * Source code generated by Fluent Builders Generator
 * Do not modify this file
 * See generator home page at: http://code.google.com/p/fluent-builders-generator-eclipse-plugin/
 */

package co.edu.unal.scrum.server.model;

import java.util.ArrayList;
import java.util.Date;

import co.edu.unal.scrum.shared.model.ProjectStatus;

public class ProjectBuilder extends ProjectBuilderBase<ProjectBuilder> {
	public static ProjectBuilder project() {
		return new ProjectBuilder();
	}

	public ProjectBuilder() {
		super(new Project());
	}

	public Project build() {
		return getInstance();
	}

}

class ProjectBuilderBase<GeneratorT extends ProjectBuilderBase<GeneratorT>> {
	private Project instance;

	protected ProjectBuilderBase(Project aInstance) {
		instance = aInstance;
	}

	protected Project getInstance() {
		return instance;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withId(int aValue) {
		instance.setId(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withName(String aValue) {
		instance.setName(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withDescription(String aValue) {
		instance.setDescription(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withStartDate(Date aValue) {
		instance.setStartDate(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withEndDate(Date aValue) {
		instance.setEndDate(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withState(ProjectStatus aValue) {
		instance.setState(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withProducts(ArrayList<Product> aValue) {
		instance.setProducts(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAddedProduct(Product aValue) {
		if (instance.getProducts() == null) {
			instance.setProducts(new ArrayList<Product>());
		}

		((ArrayList<Product>) instance.getProducts()).add(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withSprints(ArrayList<SprintBacklog> aValue) {
		instance.setSprints(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAddedSprint(SprintBacklog aValue) {
		if (instance.getSprints() == null) {
			instance.setSprints(new ArrayList<SprintBacklog>());
		}

		((ArrayList<SprintBacklog>) instance.getSprints()).add(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withScrumTeam(StakeHolder[] aValue) {
		instance.setScrumTeam(aValue);

		return (GeneratorT) this;
	}
}
